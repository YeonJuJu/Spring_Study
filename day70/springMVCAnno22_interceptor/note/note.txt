
  -- Interceptor --
     가로채는 것
     
     AOP 를 적용함
     (Aspect Oriented Programming)
     
     요청(request) 주소에 관심을 갖고 있다가
     요청이 발생하면 요청 주소를 확인하여
     Controller 의 메소드를 호출하기 전이나 후에
     다른 메소드를 호출할 수 있도록 가로채 가는 것
  
     요청 발생시 호출되는 메소드의 code가 
     중복된 부분이 있는 경우,
     Interceptor를 통해서 처리함
     
     ex) 로그인 여부 확인하기,
         등급별 서비스 사용 권한 확인하기
         등의 작업을 하는 경우에 많이 사용함
         
         
         
  -- Interceptor 구현하기 --
  
    Interceptor는 HandlerInterceptor 인터페이스를
    구현하거나 HandlerInterceptorAdapter 를 상속한
    클래스를 만들어서 메소드를 구현함
             
    preHandle : Controller의 메소드가 호출되기 전 호출됨
                이 메소드가 false를 return 하면 
                code의 흐름이 중단됨
                     
    postHandle : Controller 의 메소드의 수행이 완료되고
                 view 처리를 하기 전에 호출됨
                 
    afterCompletion : view 처리까지 완료되고
                      response(응답결과)가 browser로
                      전달되기 전에 호출됨                                      
         
         
  -- Interceptor 등록하기 --
  
  1) Annotation 방식 (ServeltAppContext.java)
  
     public void addInterceptors(InterceptorRegistry registry){
     
     }
         
  2) xml 방식 (servlet-context.xml)
  
     <interceptors></interceptors>       
         
         
  -- Pattern --
  
    * : 이름 하나를 의미함. 글자수, 글자 등 제한 없음
    ? : 글자 하나를 의미함
   ** : 하위 이름까지 포함함. 글자수, 글자 등 제한 없음 
  
  
  
  -- Pattern 등록 --
  
    addPathPatterns(), <mapping> : 
      Interceptor가 가로채 갈 주소를 등록함
  
    excludePathPatterns(), <mapping> : 
      Interceptor가 가로채 가지 않을 주소를 등록함
      
      
      
      
      
      
     