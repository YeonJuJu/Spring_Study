
  code의 흐름
  
    WebApplication 은 Browser 가 server 에 request(요청)하면
    요청 정보를 분석하고 response(응답) 결과를 생성하여
    Browser 로 전달함
    
    Spring MVC 는 request가 발생하면
                   ㄴ browser 주소창에 주소입력하고 click하면
    요청 주소를 분석하여
    해당 주소와 mapping되어있는 method를 호출하고
    method 가 return 하는 정보를 사용하여
    응답결과를 생성하여 client 에게 전달함
    
    
  Method Return
  
    Controller 를 통해서 
    요청주소와 mapping되어있는 method는
    문자열, Model, ModelAndView 등을
    return함
      <-- Browser 에게 전달할 응답결과를 생성하기 위한
          JSP를 지정하는 부분 (ex. return "test01"; )
          
    이외에도 다양한 정보를 return 할 수 있음
    해당 return 값으로 흐름을 제어할 수 있음
    
    
  Redirect
  
    Redirect 는 server가 client 에게 요청할 주소를
    응답결과로 전달하는 것을 의미함
    
    client는 응답결과로 받은 요청주소를 직접 요청함
    
    ***********************************
      Browser가 요청하는 것이기 때문에 
      주소창에 나타나는 주소가 변경됨
    ***********************************
    
    Redirect 는 새로운 요청이 발생하는 것이므로
    ***********************************************
	    HttpServletRequest 객체는 소멸되었다가
	    새롭게 생성됨.  data가 유지되지 않음.
    ***********************************************
    반면, HttpSession 객체는 그대로 유지됨
    
     
    
    
  Forward
  
    code 의 흐름이 Server 에서만 이동됨
    
    ***************************************************
      Browser 는 다른 곳으로 흐름이 이동된 것을 
      알지 못하므로 주소창의 주소가 변경되지 않음
    ***************************************************
      HttpServletRequest 객체와
      HttpSession 객체가 메모리 상에서 계속 유지됨
      (data가 메모리에서 삭제되지 않고 유지됨)
    ***************************************************
    
    
    
    